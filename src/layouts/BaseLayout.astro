---
import Subscribe from '@components/Subscribe.astro';
import BaseHead from '@components/BaseHead.astro';
import Nav from '@components/Nav.astro';
import ThemeToggle from '@components/ThemeToggle';


export interface Props {
	title: string;
  description?: string;
  image?: string;
}

const { title, description, image } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="dark bg-background">
  <div class="dark:bg-background-dark bg-background h-full">
    <div class="max-w-5xl sm:mx-4 py-10 lg:mx-auto">
      <head >
        <BaseHead title={title} description={description} image={image} />
      </head>
      <body>
        <Nav />
        <slot />
      </body>
      
      <Subscribe /> 
      <ThemeToggle classNames="sm:hidden block mx-auto" client:load />
    </div>
    
  </div>
	
</html>
<style is:global>
	:root {
		--accent: 39, 214, 184;
		--accent-gradient: linear-gradient(45deg, rgb(var(--accent)), #3AE05E 30%, white 60%);
	}

	html {
		font-family: -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, Arial,
  sans-serif, Apple Color Emoji, Segoe UI Emoji, Segoe UI Symbol;
    margin: auto;
	}
	code {
		font-family: Menlo, Monaco, Lucida Console, Liberation Mono, DejaVu Sans Mono,
			Bitstream Vera Sans Mono, Courier New, monospace;
	}
  

  

</style>
<link rel="stylesheet"
href="https://fonts.googleapis.com/css?family=Exo+2:bold|Medula+One|Metrophobic">

<script is:inline>
  const theme = (() => {
    if (typeof localStorage !== "undefined" && localStorage.getItem("theme")) {
      return localStorage.getItem("theme");
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
  } else {
    document.documentElement.classList.add("dark");
  }
  window.localStorage.setItem("theme", theme);
</script>