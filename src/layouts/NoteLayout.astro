---
export interface Props {
	content: {
		title: string;
		description: string;
		pubDate?: string;
		updatedDate?: string;
		image?: string;
	};
}
const {
	content: { title, description, pubDate, updatedDate, image },
} = Astro.props;
import BaseLayout from '@layouts/BaseLayout.astro';
import { Image } from '@astrojs/image/components';
import graph from '../../public/tagged_notes_graph.json'
import { getHash } from '@lib/hashNoteTitles'
import InternalLink from '@components/InternalLink.astro';
import NoteGraph from '@components/NoteGraph.html';
import {sentenceCase} from 'text-case'

let hashedTitle = getHash(title)
let noteEdges = graph.edges.filter((edge) => {
  return hashedTitle === edge.target
})
let linkedNotes = noteEdges.map((edge) => {
  let nodes = graph.nodes.filter((node) => {
      return node.id === edge.source
    })
  return nodes[0]
}).filter(x => !!x)


---

<BaseLayout title={title} description={description} image={image} >
    <main>
      <article class="mx-4">
        {image && <Image class="object-fit rounded mx-auto mb-8" width={720} height={360} src={image} alt="cover image"/>}
        <h1 class=" my-1 text-4xl font-bold">{title}</h1>
        {pubDate && <time>{pubDate}</time>}
        {description && <p class="prose">{description}</p>}
        {
          updatedDate && (
            <div>
              Last updated on <time>{updatedDate}</time>
            </div>
          )
        }
        <hr class="border-t border-solid border-color-subtext my-4" />
        <div class="sm:grid sm:grid-cols-8">
          <div class="prose lg:prose-lg col-span-6">
            <slot />
          </div>
          <side class="col-span-2 text-sm ">
            <h3 class="text-xl mb-4 font-medium mt-4">Notes mentioning this note</h3>
            {
              (linkedNotes.length > 0) && (
                <div style="display: grid; grid-gap: 1em; grid-template-columns: repeat(1fr);">
                {linkedNotes.map(note => {
                  return (<div class="bg-card-background text-sm p-4">
                    <b><InternalLink href={note.path} title={sentenceCase(note.label)} /></b><br>
                  </div>)
                })}
              </div>)
            }
            {
              (linkedNotes.length === 0) && (
                <div class="bg-card-background text-sm p-4">
                  <p class="prose">
                    There are no notes linking to this note.
                  </p>
                </div>
              )
            }
          </side>
      </div>
      </article>
    </main>
</BaseLayout>
<NoteGraph />
